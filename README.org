#+title: Self Repaying ENS
#+author: Wary

An Alchemix user can subscribe to the Self Repaying ENS service to automatically renew an expired ENS name. The renewal fee is paid by adding some self repaying debt to the user Alchemix account 🧙🪄💸. It was made for [[https://gitcoin.co/hackathon/moneylegos][Gitcoin's Money Legos Hackaton]].


* 🌍 Overview

The Self Repaying ENS is a smart contract written in Solidity that uses:
- the [[https://alchemix.fi/][Alchemix Protocol]] to manage users self repaying debt
- the [[https://curve.fi][Curve Protocol]] to exchange alETH and ETH
- the [[https://ens.domains/][Ethereum Name System]] to manage the ENS names
- the [[https://www.gelato.network/][Gelato Network]] to automate the smart contract actions


* 🧐 How to use

⚠ Prerequisites:
- Register a ENS name
- Deposit enough funds to the =alETH= AlchemistV2 contract

1. Allow the =AlETHRouter= contract to mint enough =alETH= debt to cover multiple renewals
2. Allow the =SelfRepayingENS= contract (aka =SRENS=) to use the =AlETHRouter= contract on your behalf
3. Subscribe to the =SRENS= service for this name

Voila ! 🥳
That's it for the user actions.

This is where the automated actions starts
- Subscribing to the service for this name tells the =Gelato Network= to monitor regularly its expiry
- Once it expires, =Gelato= tells =SRENS= to renew it
- To renew it, =SRENS= mint enough =alETH= debt to pay for the renewal and =Gelato= fees in ETH


* 🚚 How to install

⚠ Prerequisites:
- [[https://git-scm.com/downloads][git]]
- [[https://www.rust-lang.org/][rust]]
- [[https://book.getfoundry.sh/getting-started/installation][foundry]]
- [[https://stedolan.github.io/jq/][jq]]

Clone this repository and install the dependencies
#+begin_src bash
git clone git@github.com:The-Wary-One/self-repaying-ens.git
mkdir self-repaying-ens
forge install
#+end_src


* 👷 How to test

The tests needs to be run in a Mainnet fork.
Set the environment variables with your API keys
#+begin_src bash
cat .env.example > .env
vim .env
#+end_src

Run the tests
#+begin_src bash
./test.sh
#+end_src


* 🏃 How to run locally

Set the environment variables with your API keys
#+begin_src bash
cat .env.example > .env
vim .env
#+end_src

Start [[https://book.getfoundry.sh/anvil/][anvil]] as a Mainnet fork in a terminal
#+begin_src bash
./tasks/start-fork-local.sh
#+end_src

Run the local setup task
#+begin_src bash
./tasks/setup-env-local.sh
#+end_src

Now play with the app using the other tasks inside the =tasks= directory. 🥳


